import random

from random import randint
import telebot
from telebot import types


import time
import pandas as pd
import matplotlib
from datetime import datetime
import pytz

# from Model import *
from View import *
from NumGame import *
from CityGame import *
from Registration import *
from The_Gallows import *

# Список городов на букву А
cities_A = ["Абаза", "Абакан", "Абдулино", "Абинск", "Агидель", "Агрыз", "Адыгейск", "Азнакаево", "Азов", "Ак-Довурак", "Аксай", "Алагир", "Алапаевск", "Алатырь", "Алдан", "Алейск", "Александров", "Александровск", "Александровск-Сахалинский", "Алексеевка", "Алексин", "Алзамай", "Алупка", "Алушта", "Альметьевск", "Амурск", "Анадырь", "Анапа", "Ангарск", "Андреаполь", "Анжеро-Судженск", "Анива", "Апатиты", "Апрелевка", "Апшеронск", "Арамиль", "Аргун", "Ардатов", "Ардон", "Арзамас", "Аркадак", "Армавир", "Армянск", "Арсеньев", "Арск", "Артём", "Артёмовск", "Артёмовский", "Архангельск", "Асбест", "Асино", "Астрахань", "Аткарск", "Ахтубинск", "Ачинск", "Аша"]

# Список городов на букву Б
cities_B = ["Бабаево", "Бабушкин", "Багратионовск", "Байкальск", "Баксан", "Балабаново", "Балахна", "Балашиха", "Барабинск", "Барнаул", "Барыш", "Батайск", "Батецкий", "Бежецк", "Белгород", "Белебей", "Беленцов", "Белово", "Белорецк", "Белореченск", "Беловежск", "Бендеры", "Бердск", "Березники", "Березовский", "Бийск", "Благовещенск", "Благодарный", "Бодайбо", "Бологое", "Болшево", "Бор", "Борзя", "Борисоглебск", "Борисов", "Братск", "Брянск", "Бугульма", "Бузулук", "Буйнакск", "Буй", "Бурейск", "Бурятия", "Бутурлиновка", "Быково"]

# Список городов на букву В
cities_V = ["Валдай", "Варгаши", "Варна", "Великие Луки", "Великий Новгород", "Венев", "Верхняя Пышма", "Верхний Уфалей", "Видное", "Владивосток", "Владикавказ", "Владимир", "Волгоград", "Волгодонск", "Волоколамск", "Волоколамск", "Волосово", "Волхов", "Воркута", "Воронеж", "Воскресенск", "Восточный", "Восточный", "Воскресенск", "Вязьма", "Вязники"]

# Список городов на букву Г
cities_G = ["Гатчина", "Геленджик", "Георгиевск", "Глазов", "Горно-Алтайск", "Горняк", "Гороховец", "Грайворон", "Грозный", "Губкин", "Гудермес", "Гулькевичи", "Гусь-Хрустальный"]

# Список городов на букву Д
cities_D = ["Дагестан", "Далматово", "Данилов", "Дербент", "Дзержинск", "Димитровград", "Дмитров", "Долгопрудный", "Долгопрудный", "Дубна", "Дубровка", "Духовщина", "Дять", "Дятьково"]

# Список городов на букву Е
cities_E = ["Егорьевск", "Ейск", "Екатеринбург", "Елабуга", "Елец", "Ессентуки", "Ессентуки", "Ефремов"]

# Список городов на букву Ж
cities_ZH = ["Железногорск", "Железнодорожный", "Жигулевск", "Жуков", "Жуковский"]

# Список городов на букву З
cities_Z = ["Заволжье", "Задонск", "Заречный", "Зеленогорск", "Зеленодольск", "Златоуст", "Знаменск", "Зубцов"]

# Список городов на букву И
cities_I = ["Иваново", "Ивантеевка", "Ижевск", "Иркутск", "Искитим", "Истра", "Ишим", "Ишимбай"]

# Список городов на букву Й
cities_Y = ["Йошкар-Ола"]

# Список городов на букву К
cities_K = ["Калуга", "Каменск-Уральский", "Камышин", "Канаш", "Каспийск", "Кемерово", "Керчь", "Кинешма", "Киров", "Кирово-Чепецк", "Кисловодск", "Клин", "Клинцы", "Ковров", "Когалым", "Кострома", "Костромская", "Котлас", "Котельнич", "Краматорск", "Краснодар", "Красноармейск", "Красноярск", "Красноперекопск", "Краснослободск", "Кропоткин", "Кстово", "Кунгур", "Курган", "Курск", "Кушва", "Кызыл"]

# Список городов на букву Л
cities_L = ["Лабинск", "Лаишево", "Липецк", "Лиски", "Лобня", "Луга", "Луховицы", "Лыткарино", "Люберцы"]

# Список городов на букву М
cities_M = ["Магадан", "Магнитогорск", "Майкоп", "Махачкала", "Мелеуз", "Миасс", "Минеральные Воды", "Москва", "Мурманск", "Мытищи", "Мышкин"]

# Список городов на букву Н
cities_N = ["Набережные Челны", "Нальчик", 'Нягань ', "Наро-Фоминск", "Невинномысск", "Нижневартовск", "Нижний Новгород", "Нижний Тагил", "Николаевск", "Никольск", "Новороссийск", "Новосибирск", "Новомосковск", "Новоржев", "Новый Уренгой", "Ногинск", "Норильск", "Ноябрьск"]

# Список городов на букву О
cities_O = ["Обнинск", "Одинцово", "Озеры", "Октябрьский", "Омск", "Оренбург", "Орехово-Зуево", "Орлов", "Острогожск", "Оха"]

# Список городов на букву П
cities_P = ["Павлово", "Пенза", "Переславль-Залесский", "Пермь", "Петрозаводск", "Петропавловск-Камчатский", "Петушки", "Псков", "Пушкино", "Пятигорск"]

# Список городов на букву Р
cities_R = ["Раменское", "Ревда", "Ржев", "Родники", "Ростов-на-Дону", "Рубцовск", "Рыбинск", "Рязань"]

# Список городов на букву С
cities_S = ["Салават", "Сарапул", "Саранск", "Саратов", "Светлогорск", "Северодвинск", "Североморск", " Сергиев Посад", "Серов", "Симферополь", "Синегорье", "Смоленск", "Снежинск", "Сочи", "Ставрополь", "Стерлитамак", "Сургут", "Сызрань", "Сыктывкар", "Сысерть"]

# Список городов на букву Т
cities_T = ["Таганрог", "Тамбов", "Тверь", "Тольятти", "Томск", "Туапсе", "Тула", "Тюмень"]

# Список городов на букву У
cities_U = ["Улан-Удэ", "Ульяновск", "Уссурийск", "Усть-Лабинск", "Уфа", "Ухта"]

# Список городов на букву Ф
cities_F = ["Фатеж", "Фрязино", "Фурманов"]

# Список городов на букву Х
cities_H = ["Хабаровск", "Ханты-Мансийск", "Химки", "Холм", "Холмск"]

# Список городов на букву Ц
cities_C = ["Цивильск", "Цимлянск"]

# Список городов на букву Ч
cities_CH = ["Чайковский", "Челябинск", "Черкесск", "Чехов", "Чистополь", "Чита", "Чудово", "Чухлома"]

# Список городов на букву Ш
cities_SH = ["Шадринск", "Шахты", "Шелехов", "Шумерля"]

# Список городов на букву Э
cities_YE = ["Электросталь", "Электроугли", "Элиста"]

# Список городов на букву Ю
cities_YU = ["Южно-Сахалинск", "Южноуральск", "Юрга"]

# Список городов на букву Я
cities_YA = ["Якутск", "Ялта", "Ярославль"]

allRussianCities = cities_A + cities_B+ cities_V+ cities_G+ cities_D+ cities_E+ cities_ZH+ cities_Z+ cities_I+ cities_Y+ cities_K+ cities_L+ cities_M+ cities_N+ cities_O+ cities_P+ cities_R+ cities_S+ cities_T+ cities_U+ cities_F+ cities_H+ cities_C+ cities_CH+cities_SH+ cities_YE+ cities_YU+ cities_YA

keys = { '`': 'ё', 'q': 'й', 'w': 'ц', 'e': 'у', 'r': 'к', 't': 'е', 'y': 'н', 'u': 'г', 'i': 'ш',
         'o': 'щ', 'p': 'з', '[': 'з', ']': 'ъ', 'a': 'ф', 's': 'ы', 'd': 'в', 'f': 'а', 'g': 'п',
         'h': 'р', 'j': 'о', 'k': 'л', 'l': 'д', ';': 'ж', "'": 'э', 'z': 'я', 'x': 'ч', 'c': 'с',
         'v': 'м', 'b': 'и', 'n': 'т', 'm': 'ь', ',': 'б', '.': 'ю', '~': 'Ё', 'Q': 'Й', 'W': 'Ц',
         'E': 'У', 'R': 'К', 'T': 'Е', 'Y': 'Н', 'U': 'Г', 'I': 'Ш', 'O': 'Щ', 'P': 'З', '{': 'Х',
         '}': 'Ъ', 'A': 'Ф', 'S': 'Ы', 'D': 'В', 'F': 'А', 'G': 'П', 'H': 'Р', 'J': 'О', 'K': 'Л',
         'L': 'Д', ':': 'Ж', '"': 'Э', 'Z': 'Я', 'X': 'Ч', 'C': 'С', 'V': 'М', 'B': 'И', 'N': 'Т',
         'M': 'Ь', '<': 'Б','>': 'Ю'}

def RusText(message):
    message2 = ''
    for item in message:
        if item in keys:
            true = keys.get(item)
            message2 += true
        else:
            message2 += item
    return message2

leaderboard = dict()

bot = telebot.TeleBot("TOKEN")

df_excel = pd.read_excel("Accounts.xlsx")

list_of_words = ["кролик", "ёжик", "яблоко", "стол", "книга", "солнце", "река", "дом", "дерево", "машина", "цветок",
                 "друг", "город", "собака", "кошка", "птица", "море", "гора", "человек", "день", "ночь", "музыка",
                 "еда" "вода", "свет", "дождь", "ветер", "путь", "снег", "песок", "зима", "лето", "осень", "весна",
                 "друзья", "семья", "работа", "школа", "учитель", "ученик", "письмо", "фильм", "игра" "праздник",
                 "счастье", "любовь", "надежда", "долг", "память", "сила", "музей", "театр", "культура", "искусство",
                 "знание", "мир", "планета", "космос", "время", "событие", "путешествие", "достижение", "цель", "мечта",
                 "долг", "друзья", "встреча", "подарок", "улыбка", "свет", "тень", "забота", "доверие", "вдохновение",
                 "помощь", "награда", "победа", "небо", "земля", "океан", "река", "лес", "поляна", "цвет", "звуки",
                 "воспоминание", "сказка", "приключение", "сказание", "легенда", "история", "фантазия", "реальность",
                 "действительность", "судьба", "выбор", "шанс", "возможность", "поток", "жизнь", "судьба", "путь", "свет",
                 "творчество", "награда", "успех", "достижение", "потеря", "надежда", "счастье", "радость", "грусть", "печаль",
                 "вдохновение", "сила", "мужество", "доброта", "дружба", "сострадание", "любовь", "счастье", "покой", "тишина",
                 "мир", "свет", "тень", "долг", "память", "сила", "музей", "театр", "культура", "искусство", "знание", "мир",
                 "планета", "космос", "время", "событие", "путешествие", "достижение", "цель", "мечта", "долг", "друзья", "встреча",
                 "подарок", "улыбка", "свет", "тень", "забота", "доверие", "вдохновение", "помощь", "награда", "победа", "небо",
                 "земля", "океан", "река", "лес", "поляна", "цвет", "звуки", "воспоминание", "сказка", "приключение", "сказание",
                 "легенда", "история", "фантазия", "реальность", "действительность", "судьба", "выбор", "шанс", "возможность",
                 "поток", "жизнь", "судьба", "путь", "свет", "творчество", "награда", "успех", "достижение", "потеря", "надежда",
                 "счастье", "радость", "грусть", "печаль", "вдохновение", "сила", "мужество", "доброта", "дружба", "сострадание",
                 "любовь", "счастье", "покой", "тишина", "мир", "свет", "тень", "долг", "память", "сила", "музей", "театр",
                 "культура", "искусство", "знание", "мир", "планета", "космос", "время", "событие", "путешествие", "достижение",
                 "цель", "мечта", "долг", "друзья", "встреча", "подарок", "улыбка", "свет", "тень", "забота", "доверие",
                 "вдохновение", "помощь", "награда", "победа", "небо", "земля", "океан", "река", "лес", "поляна", "цвет", "звуки",
                 "воспоминание", "сказка", "приключение", "сказание", "легенда", "история", "фантазия", "реальность",
                 "действительность", "судьба", "выбор", "шанс", "возможность", "поток", "жизнь", "судьба", "путь", "свет",
                 "твор чество", "награда", "успех", "достижение", "потеря", "надежда", "счастье", "радость", "грусть",
                 "печаль", "вдохновение", "сила", "мужество", "доброта", "дружба", "сострадание", "любовь", "счастье", "покой",
                 "тишина", "мир", "свет", "тень", "долг", "память", "сила", "музей", "театр", "культура", "искусство",
                 "знание", "мир", "планета", "космос", "время", "событие", "путешествие", "достижение", "цель", "мечта", "долг",
                 "друзья", "встреча", "подарок", "улыбка", "свет", "тень", "забота", "доверие", "вдохновение", "помощь",
                 "награда", "победа", "небо", "земля", "океан", "река", "лес", "поляна", "цвет", "звуки", "воспоминание", "сказка",
                 "приключение", "сказание", "легенда", "история", "фантазия", "реальность", "действительность", "судьба",
                 "выбор", "шанс", "возможность", "поток", "жизнь", "судьба", "путь", "свет", "творчество", "награда", "успех",
                 "достижение", "потеря", "надежда", "счастье", "радость", "грусть", "печаль", "вдохновение", "сила",
                 "мужество", "доброта", "дружба", "сострадание", "любовь", "счастье", "покой", "тишина", "мир", "свет", "тень",
                 "долг", "память", "сила", "музей", "театр", "культура", "искусство", "знание", "мир", "планета",
                 "космос", "время", "событие", "путешествие", "достижение", "цель", "мечта", "долг", "друзья", "встреча", "подарок",
                 "улыбка", "свет", "тень", "забота", "доверие", "вдохновение", "помощь", "награда", "победа", "небо",
                 "земля", "океан", "река", "лес", "поляна", "цвет", "звуки", "воспоминание", "сказка", "приключение", "сказание",
                 "легенда", "история", "фантазия", "реальность", "действительность", "судьба", "выбор", "шанс", "возможность",
                 "поток", "жизнь", "судьба", "путь", "свет", "творчество", "награда", "успех", "достижение", "потеря", "надежда",
                 "счастье", "радость", "грусть", "печаль", "вдохновение", "сила", "мужество", "доброта", "дружба", "сострадание",
                 "любовь", "счастье", "покой", "тишина", "мир", "свет", "тень", "долг", "память", "сила", "музей", "театр",
                 "культура", "искусство", "знание", "мир", "планета", "космос", "время", "событие", "путешествие", "достижение",
                 "цель", "мечта", "долг", "друзья", "встреча", "подарок", "улыбка", "свет", "тень", "забота", "доверие",
                 "вдохновение", "помощь", "награда", "победа", "небо", "земля", "океан", "река", "лес", "поляна", "цвет", "звуки", "воспоминание"]

UsedCities = []
seen_word_list = []
# Глобальные переменные
city = ''
in_account = False
Gallow_state = False
word = ''
seen_word = ''
mistakes = 1  # Количество попыток
mistakes2 = 5
quest = randint(1, 100)  # Инициализация загадки

@bot.message_handler(commands=['start'])
def startFunc(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('Игра в Города России')
    btn2 = types.KeyboardButton("Угадай число")
    btn3 = types.KeyboardButton("Виселица")
    btn4 = types.KeyboardButton('О создателе')
    btn5 = types.KeyboardButton("Регистрация")
    btn6 = types.KeyboardButton("Авторизация")
    btn7 = types.KeyboardButton("Как пользоваться?")

    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    bot.send_message(message.chat.id, text='Приветик! Я ботик!')
    bot.send_message(message.chat.id, text='Во что сыграем?', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def answer_bot(message):
    global city
    global quest
    global Gallow_state
    global word
    global seen_word
    global mistakes
    global mistakes2
    global seen_word_list
    global in_account
    t = message.text
    print(t)
    t = RusText(t)

    mistakes = mistakes2

    if t == 'Игра в Города России':
        bot.send_message(message.chat.id, text='Напиши название города.')
        count_att = 0
        # time_of_clocks = T
        city = CityGame(message, None, t, count_att, allRussianCities, UsedCities, bot)

    elif t == "Угадай число":
        quest = randint(1, 100)  # Генерируем новое число
        bot.send_message(message.chat.id, text='Я загадал число от 1 до 100, а ты должен его отгадать.')
        global started_time
        started_time = time.time()

    elif t == "О создателе":
        bot.send_message(message.chat.id, text='Никто')
    elif t == "Регистрация":

        bot.send_message(message.chat.id, text='Введите имя для регистрации:')
        bot.register_next_step_handler(message, lambda msg: register_user(msg, df_excel, bot))

    elif t == "Авторизация":
        bot.send_message(message.chat.id, text='Введите имя для авторизации:')
        bot.register_next_step_handler(message, lambda msg: authorize_user(msg, df_excel, bot))

    elif t == "Выйти из аккаунта":
        in_account = False
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Игра в Города России')
        btn2 = types.KeyboardButton("Угадай число")
        btn3 = types.KeyboardButton("Виселица")
        btn4 = types.KeyboardButton('О создателе')
        btn5 = types.KeyboardButton("Регистрация")
        btn6 = types.KeyboardButton("Авторизация")
        btn7 = types.KeyboardButton("Как пользоваться?")

        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
        bot.send_message(message.chat.id, text='Вы вышли из аккаунта.', reply_markup=markup)

    elif t == "Показать статистику игр":
        pass

    elif t == 'Показать таблицу':
        if df_excel.iloc[0, 2] == True:
            bot.send_message(message.chat.id, text=df_excel.iloc[0, 2])
            with open('Accounts.xlsx', 'rb') as file:
                bot.send_document(message.chat.id, file)
                Results(message, bot)
    elif t.isdigit():
        NumGame(message, quest, bot, started_time, in_account)
    elif t == 'Как пользоваться?':
        HowToUse(message, bot)
    elif t == 'Виселица':
        bot.send_message(message.chat.id, text="Добро пожаловать в игру 'Виселица'!\n"
                                               "У тебя 6 возможностей на ошибку")
        #
        # bot.send_message(message.chat.id, text=len(word))
        # bot.send_message(message.chat.id, text= word)
        # bot.send_message(message.chat.id, text=seen_word)
        # bot.send_message(message.chat.id, text="Слово: "+" ".join(seen_word))
        reset_game()
        Gallow_state = True
        word = random.choice(list_of_words)
        seen_word_list = ['_' for _ in range(len(word))]  # Пример инициализации списка для игры в виселицу
        seen_word = '_ ' * len(word)

        bot.send_message(message.chat.id, text=seen_word)

    elif t in allRussianCities:
        if t in UsedCities:
            bot.send_message(message.chat.id, text="Уже было")
            return
        else:
            UsedCities.append(t)
            t = t.lower()
            if city[-1] not in ('ь', 'ы', 'ъ'):
                if t[0] == city[-1]:
                    city = CityGame(message, None, t, 1, allRussianCities, UsedCities, bot)
                    # index_letter = UsedCities.index(t)
                    # bot.send_message(message.chat.id, text=f"{t} {index_letter}")

                else:
                    bot.send_message(message.chat.id, text="Пиши по правилам")
            else:
                if t[0] == city[-2]:
                    city = CityGame(message, None, t, 1, allRussianCities, UsedCities, bot)
                else:
                    bot.send_message(message.chat.id, text="Пиши по правилам")
            bot.send_message(message.chat.id, text=t[0] + ' ' + city[-1])



    else:
        if Gallow_state:
            mistakes2 = Gallows(message, list_of_words, bot, t, word, seen_word, int(mistakes), seen_word_list)
        else:
            pass


bot.polling(non_stop=True)
